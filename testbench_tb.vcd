$date
	Sat Oct 24 20:51:08 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 8 ! palabra [7:0] $end
$var wire 12 " Y [11:0] $end
$var wire 4 # ALU [3:0] $end
$var reg 4 $ A [3:0] $end
$var reg 4 % B [3:0] $end
$var reg 3 & F [2:0] $end
$var reg 12 ' Ld [11:0] $end
$var reg 1 ( Load $end
$var reg 1 ) clock $end
$var reg 12 * direccion [11:0] $end
$var reg 1 + enable $end
$var reg 1 , rst $end
$var integer 32 - i [31:0] $end
$scope module G1 $end
$var wire 12 . Ld [11:0] $end
$var wire 1 ( Load $end
$var wire 1 ) clk $end
$var wire 1 + enable $end
$var wire 1 , rst $end
$var reg 12 / Y [11:0] $end
$upscope $end
$scope module G2 $end
$var wire 12 0 direccion [11:0] $end
$var wire 8 1 palabra [7:0] $end
$upscope $end
$scope module G3 $end
$var wire 4 2 A [3:0] $end
$var wire 4 3 B [3:0] $end
$var wire 3 4 F [2:0] $end
$var reg 4 5 Y [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
x,
x+
bx *
1)
x(
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#1
b0 "
b0 /
0)
1,
#2
1)
0,
#3
0)
#4
b1 "
b1 /
1)
b101010 '
b101010 .
0(
1+
#5
0)
#6
b10 "
b10 /
1)
#7
0)
#8
b11 "
b11 /
1)
#9
0)
#10
b100 "
b100 /
1)
#11
0)
#12
b101 "
b101 /
1)
#13
0)
#14
b110 "
b110 /
1)
#15
0)
#16
b101010 "
b101010 /
1)
1(
#17
0)
0(
#18
b101011 "
b101011 /
1)
#19
0)
#20
b101100 "
b101100 /
1)
#21
0)
#22
b101101 "
b101101 /
1)
#23
0)
0+
#24
1)
#25
0)
#26
1)
#27
0)
#28
1)
#29
0)
#30
1)
#31
0)
1+
#32
b101110 "
b101110 /
1)
#33
0)
#34
b101111 "
b101111 /
1)
#35
0)
#36
b110000 "
b110000 /
1)
#37
0)
#38
b110001 "
b110001 /
1)
b0 -
#39
0)
#40
b110010 "
b110010 /
1)
b1 -
b10011 !
b10011 1
b0 *
b0 0
#41
0)
#42
b110011 "
b110011 /
1)
b10 -
b111111 !
b111111 1
b1 *
b1 0
#43
0)
#44
b110100 "
b110100 /
1)
b11 -
b1101010 !
b1101010 1
b10 *
b10 0
#45
0)
#46
b110101 "
b110101 /
1)
b100 -
b100010 !
b100010 1
b11 *
b11 0
#47
0)
#48
b110110 "
b110110 /
1)
b101 -
b10000 !
b10000 1
b100 *
b100 0
#49
0)
#50
b110111 "
b110111 /
1)
b110 -
b0 !
b0 1
b101 *
b101 0
#51
0)
#52
b111000 "
b111000 /
1)
b111 -
b100011 !
b100011 1
b110 *
b110 0
#53
0)
#54
b111001 "
b111001 /
1)
b1000 -
b1000010 !
b1000010 1
b111 *
b111 0
#55
0)
#56
b111010 "
b111010 /
1)
b1001 -
b11000011 !
b11000011 1
b1000 *
b1000 0
#57
0)
#58
b111011 "
b111011 /
1)
#59
0)
#60
b111100 "
b111100 /
1)
#61
0)
b101 %
b101 3
b10 $
b10 2
#62
b111101 "
b111101 /
1)
b0 #
b0 5
b0 &
b0 4
#63
0)
b111 #
b111 5
b1 &
b1 4
#64
b111110 "
b111110 /
1)
b10 &
b10 4
#65
0)
b10 #
b10 5
b100 &
b100 4
#66
b111111 "
b111111 /
1)
b1010 #
b1010 5
b101 &
b101 4
#67
0)
b1101 #
b1101 5
b110 &
b110 4
#68
b1000000 "
b1000000 /
1)
b1 #
b1 5
b111 &
b111 4
#69
0)
b0 #
b0 5
b0 &
b0 4
#70
b1000001 "
b1000001 /
1)
b1010 $
b1010 2
#71
0)
b111 &
b111 4
#72
b1000010 "
b1000010 /
1)
#73
0)
#74
b1000011 "
b1000011 /
1)
#75
0)
#76
b1000100 "
b1000100 /
1)
